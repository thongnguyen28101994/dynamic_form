{"version":3,"sources":["statics/images/logo_so.png","apis/axiosClient.js","apis/globalApi.js","pages/login/index.js","routers/direction.js","pages/dynamicForm_V2/DefaultForm/formbaocao.js","pages/dynamicForm_V2/DefaultForm/index.js","pages/dynamicForm_V2/InlineForm/formbaocao.js","pages/dynamicForm_V2/InlineForm/index.js","pages/dynamicForm_V2/index.js","pages/test/index.js","routers/index.js","serviceWorker.js","index.js"],"names":["module","exports","axiosClient","axios","create","baseURL","process","headers","interceptors","request","use","a","config","Token","sessionStorage","getItem","response","data","error","axiosClientKhaosat7","customRequest","customResponse","selectedURL","setTimeout","message","axiosClientAdminToken","axiosApiGateway","url","includes","globalAPI","getSession","get","getDonViHanhChinh","getTonGiao","getDanToc","getTinh","getHuyen","params","getXa","getLKTat","getDTCSach","getLopById","getDotDiemByYear","getDonVi","getPhongGiaoDuc","loginsso","post","getKyThiByNamHocId","namHocId","getMonThiByKyThiId","kyThiID","getThiSinhDuThiByKyThiId","getThiSinhDuThiByKyThiIdAndMonThiId","monThiId","postDangKyThiSinhKyThi","postHuyDangKyThiSinhKyThi","parmas","getDMLoaiBienDong","getDMChucVu","getDMCongViec","getDMLoaiHopDong","getDMTrinhDoChuyenMon","getDMXepLoaiDatChuan","getDMQuocTich","getDMMonHoc","isMonTieuHoc","getDSBienDong","DotDiemID","postXoaBienDong","BienDongID","Option","OptGroup","Login","useForm","form","useState","schools","setSchools","pgds","setpgds","getSchools","then","res","Result","getPGDs","useEffect","style","backgroundColor","height","xs","span","lg","offset","paddingTop","bordered","width","textAlign","display","paddingBottom","src","logo","alt","name","onFinish","validateFields","schoolID","getFieldValue","SysUserName","SysPassword","Param1","Param2","Param3","Returnuri","isHocSinh","StatusCode","window","location","href","Item","label","rules","required","placeholder","onChange","e","setFieldsValue","console","log","allowClear","showSearch","optionFilterProp","map","pgd","TenPGD","key","PGDID","filter","s","SchoolID","value","TenTruong","htmlType","type","Direction","useLocation","history","useHistory","setItem","decodeURIComponent","search","substring","JSON","stringify","AccountType","push","onHandleChangeNumeric","formValue","fieldKey","columnID","valu","Number","parseInt","target","formVal","getFieldsValue","length","warning","users","FormCustom","React","memo","restProps","columnName","valuePropName","inputType","allowNull","props","selectkey","parse","inputValue","format","FormRender","DefaultForm","Column","columns","setColumns","getFormColumn","className","title","autoComplete","marginRight","onClick","success","MinusCircleOutlined","fileList","setFileList","changeFileList","uploadProps","action","RowID","token","info","slice","file","status","maxCount","beforeUpload","icon","UploadOutlined","InlineForm","addNewRow","addEmptyRow","add","deleteNewRow","List","fields","remove","dataSource","pagination","scroll","x","y","block","PlusOutlined","dataIndex","colDescription","render","row","index","fixed","danger","columnFiles","forEach","item","DynamicFormV2","id","Test","hist","createBrowserHistory","AppRouter","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,qC,yUCKrCC,EAAcC,IAAMC,OAAO,CAC/BC,QAASC,6CACTC,QAAS,CACP,eAAgB,sBAIpBL,EAAYM,aAAaC,QAAQC,IAAjC,+BAAAC,EAAA,MAAqC,WAAOC,GAAP,SAAAD,EAAA,6DAEnCC,EAAOL,QAAU,CACfM,MAAOC,eAAeC,QAAQ,UAHG,kBAK5BH,GAL4B,2CAArC,uDAQAV,EAAYM,aAAaQ,SAASN,KAChC,SAACM,GACC,OAAIA,GAAYA,EAASC,KAChBD,EAASC,KAGXD,KAET,SAACE,GAEC,MAAMA,KAI6Bf,IAAMC,OAAO,CAClDC,QAASC,6CACTC,QAAS,CACP,eAAgB,yBAGIC,aAAaC,QAAQC,IAA7C,+BAAAC,EAAA,MAAiD,WAAOC,GAAP,SAAAD,EAAA,6DAE/CC,EAAOL,QAAU,CACfM,MAAOC,eAAeC,QAAQ,UAHe,kBAKxCH,GALwC,2CAAjD,uDAQO,IAAMO,EAAsBhB,IAAMC,OAAO,CAC9CC,QAAS,gCACTE,QAAS,CACP,eAAgB,sBAGpBY,EAAoBC,cAAgB,aACpCD,EAAoBE,eAAiB,SAACC,KACtCH,EAAoBX,aAAaC,QAAQC,IAAzC,+BAAAC,EAAA,MAA6C,WAAOC,GAAP,SAAAD,EAAA,6DAE3CQ,EAAoBC,gBACpBR,EAAOL,QAAU,CACfM,MAAOC,eAAeC,QAAQ,UAJW,kBAMpCH,GANoC,2CAA7C,uDASAO,EAAoBX,aAAaQ,SAASN,KACxC,SAACM,GACC,OAAIA,GAAYA,EAASC,MACvBE,EAAoBE,eAAeL,EAASC,MACrCD,EAASC,MAEXD,KAET,SAACE,GAKC,MAJAK,YAAW,WACTC,EAAA,EAAQN,MAAM,wEACb,KACHC,EAAoBE,iBACdH,KAIH,IAAMO,EAAwBtB,IAAMC,OAAO,CAChDC,QAASC,6CACTC,QAAS,CACP,eAAgB,sBAIpBkB,EAAsBjB,aAAaC,QAAQC,IAA3C,+BAAAC,EAAA,MAA+C,WAAOC,GAAP,SAAAD,EAAA,6DAE7CC,EAAOL,QAAU,CACfM,MAAO,eAHoC,kBAKtCD,GALsC,2CAA/C,uDAQAa,EAAsBjB,aAAaQ,SAASN,KAC1C,SAACM,GACC,OAAIA,GAAYA,EAASC,KAChBD,EAASC,KAGXD,KAET,SAACE,GAEC,MAAMA,KAIH,IAAMQ,EAAkBvB,IAAMC,OAAO,CAC1CC,QAAS,4CACTE,QAAS,CACP,eAAgB,sBAIpBmB,EAAgBlB,aAAaC,QAAQC,IAArC,+BAAAC,EAAA,MAAyC,WAAOC,GAAP,SAAAD,EAAA,6DAEnCC,EAAOe,IAAIC,SAAS,UACtBhB,EAAOP,QAAU,IAEnBO,EAAOL,QAAU,CACfM,MAAOC,eAAeC,QAAQ,UANO,kBAShCH,GATgC,2CAAzC,uDAWAc,EAAgBlB,aAAaQ,SAASN,KACpC,SAACM,GACC,OAAIA,GAAYA,EAASC,KAChBD,EAASC,KAGXD,KAET,SAACE,GAGC,MADAhB,EAAYmB,iBACNH,KAIKhB,QCjBA2B,EA7HG,CAChBC,WAAY,WAEV,OAAO5B,EAAY6B,IADV,+BAGXC,kBAAmB,WAEjB,OAAO9B,EAAY6B,IADV,kCAIXE,WAAY,WAEV,OAAO/B,EAAY6B,IADP,2BAGdG,UAAW,WAET,OAAOhC,EAAY6B,IADP,0BAGdI,QAAS,WAEP,OAAOjC,EAAY6B,IADP,wBAGdK,SAAU,SAACC,GACT,IAAMV,EAAG,+BAA2BU,GACpC,OAAOnC,EAAY6B,IAAIJ,IAEzBW,MAAO,SAACD,GACN,IAAMV,EAAG,4BAAwBU,GACjC,OAAOnC,EAAY6B,IAAIJ,IAEzBY,SAAU,WAER,OAAOrC,EAAY6B,IADV,mCAGXS,WAAY,WAEV,OAAOtC,EAAY6B,IADV,uCAGXU,WAAY,SAACJ,GACX,IAAMV,EAAG,sCAAkCU,GAC3C,OAAOnC,EAAY6B,IAAIJ,IAEzBe,iBAAkB,SAACL,GACjB,IAAMV,EAAG,0CAAsCU,GAC/C,OAAOnC,EAAY6B,IAAIJ,IAEzBgB,SAAU,WAER,OAAOzC,EAAY6B,IADV,wBAGXa,gBAAiB,WAEf,OAAO1C,EAAY6B,IADV,gCAGXc,SAAU,SAACR,GAET,OAAOnC,EAAY4C,KADV,sBACoBT,IAE/BU,mBAAoB,SAACC,GACnB,IAAMrB,EAAG,4BAAwBqB,GACjC,OAAO9C,EAAY6B,IAAIJ,IAEzBsB,mBAAoB,SAACC,GACnB,IAAMvB,EAAG,6BAAyBuB,GAClC,OAAOhD,EAAY6B,IAAIJ,IAEzBwB,yBAA0B,SAACD,GACzB,IAAMvB,EAAG,mCAA+BuB,GACxC,OAAOhD,EAAY6B,IAAIJ,IAEzByB,oCAAqC,SAACF,EAASG,GAC7C,IAAM1B,EAAG,mCAA+BuB,EAA/B,YAA0CG,GACnD,OAAOnD,EAAY6B,IAAIJ,IAEzB2B,uBAAwB,SAACjB,GAEvB,OAAOnC,EAAY4C,KADV,kCACoBT,IAE/BkB,0BAA2B,SAACC,GAE1B,OAAOtD,EAAY4C,KADV,qCACoBU,IAE/BC,kBAAmB,WAEjB,OAAOvD,EAAY6B,IADV,iCAGX2B,YAAa,WAEX,OAAOxD,EAAY6B,IADV,4BAGX4B,cAAe,WAEb,OAAOzD,EAAY6B,IADV,8BAGX6B,iBAAkB,WAEhB,OAAO1D,EAAY6B,IADV,iCAGX8B,sBAAuB,WAErB,OAAO3D,EAAY6B,IADV,sCAGX+B,qBAAsB,WAEpB,OAAO5D,EAAY6B,IADV,qCAIXgC,cAAe,WAEb,OAAO7D,EAAY6B,IADV,8BAIXiC,YAAa,SAACC,GACZ,IAAMtC,EAAG,gCAA4BsC,GACrC,OAAO/D,EAAY6B,IAAIJ,IAEzBuC,cAAe,SAACC,GACd,IAAMxC,EAAG,mCAA+BwC,GACxC,OAAOjE,EAAY6B,IAAIJ,IAEzByC,gBAAiB,SAACC,GAChB,IAAM1C,EAAG,oCAAgC0C,GACzC,OAAOnE,EAAY6B,IAAIJ,K,kBCvHnB2C,E,IAAAA,OAAQC,E,IAAAA,SAwGDC,EAtGD,WAAO,IAAD,EACH,IAAKC,UAAbC,EADW,sBAEYC,mBAAS,IAFrB,mBAEXC,EAFW,KAEFC,EAFE,OAGMF,mBAAS,IAHf,mBAGXG,EAHW,KAGLC,EAHK,KAKZC,EAAU,uCAAG,sBAAArE,EAAA,sEACXkB,EAAUc,WAAWsC,MAAK,SAACC,GAAD,OAASL,EAAWK,EAAIC,WADvC,2CAAH,qDAGVC,EAAO,uCAAG,sBAAAzE,EAAA,sEACRkB,EAAUe,kBAAkBqC,MAAK,SAACC,GAAD,OAASH,EAAQG,EAAIC,WAD9C,2CAAH,qDAGbE,qBAAU,WACRL,IACAI,MACC,IAyBH,OACE,oCACE,uBAAKE,MAAO,CAAEC,gBAAiB,UAAWC,OAAQ,UAChD,uBACEC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,EAAGE,OAAQ,GACvBN,MAAO,CAAEO,WAAY,MAErB,uBAAMC,UAAU,GACd,0BACER,MAAO,CACLS,MAAO,OACPC,UAAW,SACXC,QAAS,QACTC,cAAe,KAGjB,yBAAKC,IAAKC,IAAMC,IAAI,YAEtB,uBAAMC,KAAK,gBAAgBC,SA3CnB,WAChB7B,EAAK8B,iBAAiBvB,KAAtB,sBAA2B,8BAAAtE,EAAA,6DACnB8F,EAAW/B,EAAKgC,cAAc,YAC9BzF,EAAO,CACX0F,YAAa,SACbC,YAAa,cACbC,OAAQJ,EACRK,OAAQ,SACRC,OAAQ,SACRC,UAGM,8DACNC,UAAW,SAZY,SAcnBpF,EAAUgB,SAAS5B,GAAMgE,MAAK,SAACC,GACZ,MAAnBA,EAAIgC,WACNC,OAAOC,SAASC,KAAOnC,EAAIC,OAE3B3D,EAAA,EAAQN,MAAM,kCAlBO,6CA0C6BwD,KAAMA,GACpD,sBAAM4C,KAAN,CACEhB,KAAK,WACLiB,MAAM,mBACNC,MAAO,CACL,CACEC,UAAU,EACVjG,QAAS,6CAIb,uBACEkG,YAAY,yCACZC,SAAU,SAACC,GAAD,OAAOlD,EAAKmD,eAAeC,QAAQC,IAAIH,KACjDI,YAAU,EACVC,YAAU,EACVC,iBAAiB,YAEhBpD,EAAKqD,KAAI,SAACC,GAAD,OACR,kBAAC7D,EAAD,CAAUgD,MAAOa,EAAIC,OAAQC,IAAKF,EAAIG,OACnC3D,EACE4D,QAAO,SAACC,GAAD,OAAOA,EAAEF,QAAUH,EAAIG,SAC9BJ,KAAI,SAACM,GAAD,OACH,kBAAC,EAAD,CAAQH,IAAKG,EAAEC,SAAUC,MAAOF,EAAEC,UAC/BD,EAAEG,oBAOjB,uBAAGtD,MAAO,CAAEU,UAAW,WACrB,uBAAQ6C,SAAS,SAASC,KAAK,WAA/B,6BCxEDC,EAtBG,WAChB,IAAI3B,EAAW4B,cACXC,EAAUC,cAiBd,OAhBApI,eAAeqI,QACb,QACAC,mBAAmBhC,EAASiC,OAAOC,UAAU,KAG/CjE,qBAAU,WACRxD,EAAUC,aAAamD,KAAvB,uCAA4B,WAAOC,GAAP,SAAAvE,EAAA,sDACH,MAAnBuE,EAAIgC,aACNpG,eAAeqI,QAAQ,UAAWI,KAAKC,UAAUtE,EAAIC,OAAO,KAC5D2C,QAAQC,IAAI7C,GACsB,QAA9BA,EAAIC,OAAO,GAAGsE,aAChBR,EAAQS,KAAK,YALS,2CAA5B,yDASC,CAACT,IACG,sC,wFCoHHU,EAAwB,SAAC/B,EAAGgC,EAAWC,EAAUC,GACrD,IAAIC,EAAOC,OAAOC,SAASrC,EAAEsC,OAAOvB,OAChCwB,EAAUP,EAAUQ,kBACnBJ,OAAOD,IAASA,EAAKM,OAAS,IACjC7I,EAAA,EAAQ8I,QAAQ,oDAChBH,EAAQI,MAAMV,GAAUC,GAAY,GACpCF,EAAU/B,eAAesC,KAyBdK,EAtBIC,IAAMC,MAAK,YAAuB,IAAjBC,EAAgB,oBAClD,OACE,oCACE,sBAAMrD,KAAN,CACEC,MAAOoD,EAAUC,WACjBtC,IAAKqC,EAAUb,SACfxD,KAAM,CAACqE,EAAUrE,KAAMqE,EAAUb,SAAW,IAC5Ce,cAAuC,aAAxBF,EAAUG,UAA2B,UAAY,QAEhEtD,MAAO,CACL,CACEC,UAAWkD,EAAUI,UACrBvJ,QAAQ,WAAD,OAAamJ,EAAUC,eAzIvB,SAACI,GAAW,IACrB1G,EADoB,IACpBA,OADoB,EAEIK,mBAAS,IAFb,6BAuD5B,OAAQqG,EAAMF,WACZ,IAAK,SACH,IAAIG,EAAY1B,KAAK2B,MAAMF,EAAMG,YACjC,OACE,uBAAQlD,YAAU,EAACP,YAAW,UAAKsD,EAAMJ,aACtCK,EAAU9C,KAAI,SAACQ,GAAD,OACb,kBAACrE,EAAD,CAAQgE,IAAKK,EAAOA,MAAOA,GACxBA,OAKX,IAAK,WACH,OAAO,4BACT,IAAK,OACH,OAAO,uBAAYyC,OAAO,eAG5B,IAAK,SAyBL,IAAK,MACH,OACE,uBACE1D,YAAasD,EAAMJ,WACnBjD,SAAU,SAACC,GAAD,OACR+B,EACE/B,EACAoD,EAAMpB,UACNoB,EAAMnB,SACNmB,EAAMlB,aAKhB,QACE,OAAO,uBAAOpC,YAAasD,EAAMJ,cA4B9BS,CAAWV,QChJL,SAASW,IAAe,IAAD,EACrB,IAAK7G,UAAbC,EAD6B,2BAE5B6G,OAGsB5G,mBAAS,KALH,mBAK7B6G,EAL6B,KAKpBC,EALoB,KAQpCpG,qBAAU,WACRqG,MACC,IAEH,IAAMA,EAAgB,WA4BpBD,EA3BgB,CACd,CACE3B,SAAU,EACVc,WAAY,QACZtE,KAAM,SAER,CACEwD,SAAU,EACVc,WAAY,QACZtE,KAAM,SAER,CACEwD,SAAU,EACVc,WAAY,QACZtE,KAAM,SAER,CACEwD,SAAU,EACVc,WAAY,QACZtE,KAAM,SAER,CACEwD,SAAU,EACVc,WAAY,QACZtE,KAAM,YAMZ,OACE,oCACE,4CACA,uBACEqF,UAAU,8BACVC,MAAM,iDAEN,uBACEtF,KAAK,yBAELuF,aAAa,MACbnH,KAAMA,GAEL8G,EAAQrD,KAAI,gBAAG2B,EAAH,EAAGA,SAAUc,EAAb,EAAaA,WAAeD,EAA5B,gDACX,oCACE,kBAAC,EAAD,eAEEf,UAAWlF,EAEXoF,SAAUA,EACVc,WAAYA,GACRD,QAIV,sBAAMrD,KAAN,KACE,uBACEwB,KAAK,UACLD,SAAS,SACTvD,MAAO,CAAEwG,YAAa,MACtBC,QAAS,WAIPvK,EAAA,EAAQwK,QAAQ,yBAGlB,kBAACC,EAAA,EAAD,MAXF,iB,wECkDNtC,EAAwB,SAAC/B,EAAGgC,EAAWC,EAAUC,GACrD,IAAIC,EAAOC,OAAOC,SAASrC,EAAEsC,OAAOvB,OAChCwB,EAAUP,EAAUQ,kBACnBJ,OAAOD,IAASA,EAAKM,OAAS,IACjC7I,EAAA,EAAQ8I,QAAQ,oDAChBH,EAAQI,MAAMV,GAAUC,GAAY,GACpCF,EAAU/B,eAAesC,KAwBdK,EArBIC,IAAMC,MAAK,YAAuB,IAAjBC,EAAgB,oBAClD,OACE,oCACE,sBAAMrD,KAAN,CACEgB,IAAKqC,EAAUb,SAAWa,EAAUd,SACpCvD,KAAM,CAACqE,EAAUrE,KAAMqE,EAAUb,SAAW,IAC5Ce,cAAuC,aAAxBF,EAAUG,UAA2B,UAAY,QAChEjB,SAAU,CAACc,EAAUd,SAAUc,EAAUb,UACzCtC,MAAO,CACL,CACEC,UAAWkD,EAAUI,UACrBvJ,QAAQ,WAAD,OAAamJ,EAAUC,eAxIvB,SAACI,GAAW,IACrB1G,EADoB,IACpBA,OADoB,EAEIK,mBAAS,IAFb,mBAErBuH,EAFqB,KAEXC,EAFW,KAGtBC,EAAiB,SAACnL,GACtBkL,EAAYlL,IAcdoE,qBAAU,WACR,IAAIpE,EACF+J,EAAMpB,UAAUQ,iBAAiBG,MAAMS,EAAMnB,UAAUmB,EAAMlB,UAC/DsC,EAAenL,KACd,IACH,IAAMoL,EAAc,CAClB/F,KAAM,OACNgG,OACE,oEACAtB,EAAMpB,UAAUQ,iBAAiBG,MAAMS,EAAMnB,UAAU0C,MACvD,IACAvB,EAAMlB,SACRvJ,QAAS,CACPiM,MAAO1L,eAAeC,QAAQ,UAEhC4G,SAVkB,SAUT8E,GACP,IAAIP,EAAQ,YAAOO,EAAKP,UAExBA,GADAA,EAAWA,EAASQ,OAAO,IACPvE,KAAI,SAACwE,GAKvB,OAJIA,EAAK3L,WAEP2L,EAAKhL,IAAMgL,EAAK3L,SAASW,KAEpBgL,KAETP,EAAeF,GACXO,EAAKE,KAAKC,OAGW,SAArBH,EAAKE,KAAKC,OACZpL,EAAA,EAAQwK,QAAR,UAAmBS,EAAKE,KAAKrG,KAA7B,gCAC8B,UAArBmG,EAAKE,KAAKC,QACnBpL,EAAA,EAAQN,MAAR,UAAiBuL,EAAKE,KAAKrG,KAA3B,2BAKN,OAAQ0E,EAAMF,WACZ,IAAK,SACH,IAAIG,EAAY1B,KAAK2B,MAAMF,EAAMG,YACjC,OACE,uBAAQlD,YAAU,EAACP,YAAW,UAAKsD,EAAMJ,aACtCK,EAAU9C,KAAI,SAACQ,GAAD,OACb,kBAACrE,EAAD,CAAQgE,IAAKK,EAAOA,MAAOA,GACxBA,OAKX,IAAK,WACH,OAAO,4BACT,IAAK,OACH,OAAO,uBAAYyC,OAAO,eAG5B,IAAK,SACH,OACE,uBACE1D,YAAasD,EAAMJ,WACnBjD,SAAU,SAACC,GAAD,OACR+B,EACE/B,EACAoD,EAAMpB,UACNoB,EAAMnB,SACNmB,EAAMlB,aAKhB,IAAK,OACH,OACE,uCACMuC,EADN,CAEEH,SAAUA,EACVW,SAAU,EACVC,aAvFR,SAAsBH,GAOpB,KALgB,oBAAdA,EAAK7D,MAEH,4EADF6D,EAAK7D,MAES,uBAAd6D,EAAK7D,MAIL,OADAtH,EAAA,EAAQN,MAAM,0CACP,KAgFH,uBAAQ6L,KAAM,kBAACC,EAAA,EAAD,OAAd,oBAGN,IAAK,MACH,OACE,uBACEtF,YAAasD,EAAMJ,WACnBjD,SAAU,SAACC,GAAD,OACR+B,EACE/B,EACAoD,EAAMpB,UACNoB,EAAMnB,SACNmB,EAAMlB,aAKhB,QACE,OAAO,uBAAOpC,YAAasD,EAAMJ,cA2B9BS,CAAWV,Q,SC/IL,SAASsC,IAAc,IAAD,EACpB,IAAKxI,UAAbC,EAD4B,oBAE3B6G,EAF2B,IAE3BA,OAF2B,EAIL5G,mBAAS,IAJJ,mBAI5B6G,EAJ4B,KAInBC,EAJmB,KAQ7ByB,EAAS,uCAAG,WAAOC,EAAaC,GAApB,SAAAzM,EAAA,sDAChByM,IADgB,2CAAH,wDAGTD,EAAW,uCAAG,sBAAAxM,EAAA,0FAAH,qDACX0M,EAAY,uCAAG,sBAAA1M,EAAA,0FAAH,qDAEZ4F,EAAQ,uCAAG,sBAAA5F,EAAA,0FAAH,qDAGd0E,qBAAU,WACRqG,MACC,IAEH,IAAMA,EAAgB,WAuBpBD,EAtBgB,CACd,CACE3B,SAAU,EACVc,WAAY,SAEd,CACEd,SAAU,EACVc,WAAY,SAEd,CACEd,SAAU,EACVc,WAAY,SAEd,CACEd,SAAU,EACVc,WAAY,SAEd,CACEd,SAAU,EACVc,WAAY,YAMlB,OACE,oCACE,uBACEe,UAAU,8BACVC,MAAM,0CAELJ,EAAQnB,OAAS,EAChB,oCACE,uBACE/D,KAAK,yBACLC,SAAUA,EACVsF,aAAa,MACbnH,KAAMA,GAEN,sBAAM4I,KAAN,CAAWhH,KAAK,UACb,SAACiH,EAAD,OAAWH,EAAX,EAAWA,IAAX,EAAgBI,OAAhB,OACC,oCACE,uBACEC,WAAYF,EACZG,YAAY,EACZ5H,UAAQ,EACR6H,OAAQ,CAAEC,EAAG,KAAMC,EAAG,KACtBjC,MAAO,WACL,OACE,oCACE,sBAAMtE,KAAN,KACE,uBACEwB,KAAK,SAELiD,QAAS,WACPmB,EAAUC,EAAaC,IAKzBU,OAAK,EACLf,KAAM,kBAACgB,EAAA,EAAD,OAVR,uBAmBPvC,EAAQrD,KAAI,gBAAG2B,EAAH,EAAGA,SAAUc,EAAb,EAAaA,WAAeD,EAA5B,gDACX,oCACE,kBAACY,EAAD,CACEyC,UAAWlE,EACX8B,MACE,uBAASA,MAAOjB,EAAUsD,gBACvBrD,GAGL7E,MAAO4E,EAAU5E,MAEjBmI,OAAQ,SAACvF,EAAOwF,EAAKC,GACnB,OACE,kBAAC,EAAD,eACE9H,KAAM8H,EACNxE,UAAWlF,EACXmF,SAAUuE,EACVtE,SAAUA,EACVc,WAAYA,GACRD,WAOhB,kBAACY,EAAD,CACEyC,UAAW,UACXpC,MAAO,cACPyC,MAAM,QACNtI,MAAO,IACPmI,OAAQ,SAACvF,EAAOwF,EAAKC,GACnB,OACE,oCACE,uBACEtF,KAAK,UACLD,SAAS,SACTvD,MAAO,CAAEwG,YAAa,MACtBC,QAAS,cAMT,kBAACE,EAAA,EAAD,MAVF,aAYA,uBACEqC,QAAM,EACNvC,QAAS,WACP,IAAIwC,EAAc/C,EAAQhD,QACxB,SAACoF,GAAD,MAAuB,SAAhBA,EAAE9C,aAEPyD,EAAYlE,OAAS,GACvBkE,EAAYC,SAAQ,SAACC,OAOvBpB,MAMF,kBAACpB,EAAA,EAAD,MApBF,sBAgClB,OC1LG,SAASyC,EAAT,GAAgC,IAAPC,EAAM,EAANA,GACtC,OAAO,oCAAU,IAAPA,EAAW,kBAACrD,EAAD,MAAkB,kBAAC2B,EAAD,OCF1B,SAAS2B,IACtB,OACE,oCACE,2CACA,kBAACF,EAAD,CAAeC,GAAI,IACnB,kBAACD,EAAD,CAAeC,GAAI,KCDzB,IAAME,GAAOC,cAoBEC,GAlBG,WAChB,OACE,kBAAC,IAAD,CAAQ9F,QAAS4F,IACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,kBAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAACL,EAAD,U,OCPUM,QACW,cAA7B/H,OAAOC,SAAS+H,UAEe,UAA7BhI,OAAOC,SAAS+H,UAEhBhI,OAAOC,SAAS+H,SAASC,MACvB,2DCXNC,IAASnB,OAAO,kBAAC,GAAD,MAASoB,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzK,MAAK,SAAA0K,GACJA,EAAaC,gBAEdC,OAAM,SAAA3O,GACL4G,QAAQ5G,MAAMA,EAAMM,c","file":"static/js/main.58dc1df0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_so.7e31e704.png\";","import { message } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\n// Set up default config for http requests here\r\n// Please have a look at here `https://github.com/axios/axios#request- config` for the full list of configs\r\nconst axiosClient = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n  headers: {\r\n    \"content-type\": \"application/json\",\r\n  },\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n  // Handle token here ...\r\n  config.headers = {\r\n    Token: sessionStorage.getItem(\"token\"),\r\n  };\r\n  return config;\r\n});\r\n\r\naxiosClient.interceptors.response.use(\r\n  (response) => {\r\n    if (response && response.data) {\r\n      return response.data;\r\n    }\r\n\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Handle errors\r\n    throw error;\r\n  }\r\n);\r\n\r\nexport const axiosClientPostFormData = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n  headers: {\r\n    \"content-type\": \"multipart/form-data\",\r\n  },\r\n});\r\naxiosClientPostFormData.interceptors.request.use(async (config) => {\r\n  // Handle token here ...\r\n  config.headers = {\r\n    Token: sessionStorage.getItem(\"token\"),\r\n  };\r\n  return config;\r\n});\r\n\r\nexport const axiosClientKhaosat7 = axios.create({\r\n  baseURL: \"https://apigateway.hcm.edu.vn\",\r\n  headers: {\r\n    \"content-type\": \"application/json\",\r\n  },\r\n});\r\naxiosClientKhaosat7.customRequest = () => {};\r\naxiosClientKhaosat7.customResponse = (selectedURL) => {};\r\naxiosClientKhaosat7.interceptors.request.use(async (config) => {\r\n  // Handle token here ...\r\n  axiosClientKhaosat7.customRequest();\r\n  config.headers = {\r\n    Token: sessionStorage.getItem(\"token\"),\r\n  };\r\n  return config;\r\n});\r\n\r\naxiosClientKhaosat7.interceptors.response.use(\r\n  (response) => {\r\n    if (response && response.data) {\r\n      axiosClientKhaosat7.customResponse(response.data);\r\n      return response.data;\r\n    }\r\n    return response;\r\n  },\r\n  (error) => {\r\n    setTimeout(() => {\r\n      message.error(\"Máy chủ đang bận, Vui lòng quay lại sau!\");\r\n    }, 300);\r\n    axiosClientKhaosat7.customResponse();\r\n    throw error;\r\n  }\r\n);\r\n\r\nexport const axiosClientAdminToken = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n  headers: {\r\n    \"content-type\": \"application/json\",\r\n  },\r\n});\r\n\r\naxiosClientAdminToken.interceptors.request.use(async (config) => {\r\n  // Handle token here ...\r\n  config.headers = {\r\n    Token: \"%8hKj909*nm\",\r\n  };\r\n  return config;\r\n});\r\n\r\naxiosClientAdminToken.interceptors.response.use(\r\n  (response) => {\r\n    if (response && response.data) {\r\n      return response.data;\r\n    }\r\n\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Handle errors\r\n    throw error;\r\n  }\r\n);\r\n\r\nexport const axiosApiGateway = axios.create({\r\n  baseURL: \"https://apigateway.hcm.edu.vn/WAPINetCore\",\r\n  headers: {\r\n    \"content-type\": \"application/json\",\r\n  },\r\n});\r\n\r\naxiosApiGateway.interceptors.request.use(async (config) => {\r\n  // Handle token here ...\r\n  if (config.url.includes(\"http\")) {\r\n    config.baseURL = \"\";\r\n  }\r\n  config.headers = {\r\n    Token: sessionStorage.getItem(\"token\"),\r\n  };\r\n  // axiosClient.customRequest();\r\n  return config;\r\n});\r\naxiosApiGateway.interceptors.response.use(\r\n  (response) => {\r\n    if (response && response.data) {\r\n      return response.data;\r\n    }\r\n\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Handle errors\r\n    axiosClient.customResponse();\r\n    throw error;\r\n  }\r\n);\r\n\r\nexport default axiosClient;\r\n","import axiosClient from \"../apis/axiosClient\";\r\n\r\nconst globalAPI = {\r\n  getSession: () => {\r\n    const url = `/wapiquanly/getSessionData`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getDonViHanhChinh: () => {\r\n    const url = `/wapiquanly/getDonviHanhChinh`;\r\n    return axiosClient.get(url);\r\n  },\r\n\r\n  getTonGiao: () => {\r\n    const url = \"/wapiquanly/getTonGiao\";\r\n    return axiosClient.get(url);\r\n  },\r\n  getDanToc: () => {\r\n    const url = \"/wapiquanly/getDanToc\";\r\n    return axiosClient.get(url);\r\n  },\r\n  getTinh: () => {\r\n    const url = \"/wapiquanly/getTinh\";\r\n    return axiosClient.get(url);\r\n  },\r\n  getHuyen: (params) => {\r\n    const url = `/wapiquanly/getHuyen/${params}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getXa: (params) => {\r\n    const url = `/wapiquanly/getXa/${params}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getLKTat: () => {\r\n    const url = `/wapiquanly/getDMLoaiKhuyetTat`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getDTCSach: () => {\r\n    const url = `/wapiquanly/getDMDoiTuongChinhSach`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getLopById: (params) => {\r\n    const url = `/apiChuyenTruong/getLopbyID/${params}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getDotDiemByYear: (params) => {\r\n    const url = `wapiquanly/getDMDotDiembyNamHoc/${params}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getDonVi: () => {\r\n    const url = `wapiquanly/getDonVi`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getPhongGiaoDuc: () => {\r\n    const url = `/wapiquanly/getPhongGiaoDuc`;\r\n    return axiosClient.get(url);\r\n  },\r\n  loginsso: (params) => {\r\n    const url = `wapiquanly/loginsso`;\r\n    return axiosClient.post(url, params);\r\n  },\r\n  getKyThiByNamHocId: (namHocId) => {\r\n    const url = `apiKyThi/getKyThi/${namHocId}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getMonThiByKyThiId: (kyThiID) => {\r\n    const url = `apiKyThi/getMonThi/${kyThiID}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getThiSinhDuThiByKyThiId: (kyThiID) => {\r\n    const url = `apiKyThi/getThiSinhDuThi/${kyThiID}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getThiSinhDuThiByKyThiIdAndMonThiId: (kyThiID, monThiId) => {\r\n    const url = `apiKyThi/getThiSinhDuThi/${kyThiID}/${monThiId}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  postDangKyThiSinhKyThi: (params) => {\r\n    const url = `apiKyThi/postDangKyThiSinhKyThi`;\r\n    return axiosClient.post(url, params);\r\n  },\r\n  postHuyDangKyThiSinhKyThi: (parmas) => {\r\n    const url = `apiKyThi/postHuyDangKyThiSinhKyThi`;\r\n    return axiosClient.post(url, parmas);\r\n  },\r\n  getDMLoaiBienDong: () => {\r\n    const url = `wapiquanly/getDMLoaiBienDong`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getDMChucVu: () => {\r\n    const url = `apiGiaoVien/getDMChucVu`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getDMCongViec: () => {\r\n    const url = `apiGiaoVien/getDMCongViec`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getDMLoaiHopDong: () => {\r\n    const url = `apiGiaoVien/getDMLoaiHopDong`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getDMTrinhDoChuyenMon: () => {\r\n    const url = `apiGiaoVien/getDMTrinhDoChuyenMon`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getDMXepLoaiDatChuan: () => {\r\n    const url = `apiGiaoVien/getDMXepLoaiDatChuan`;\r\n    return axiosClient.get(url);\r\n  },\r\n\r\n  getDMQuocTich: () => {\r\n    const url = `apiGiaoVien/getDMQuocTich`;\r\n    return axiosClient.get(url);\r\n  },\r\n\r\n  getDMMonHoc: (isMonTieuHoc) => {\r\n    const url = `apiDiemSo/getDMMonHoc/${isMonTieuHoc}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getDSBienDong: (DotDiemID) => {\r\n    const url = `wapiquanly/getDSBienDong/${DotDiemID}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  postXoaBienDong: (BienDongID) => {\r\n    const url = `wapiquanly/deleteBienDong/${BienDongID}`;\r\n    return axiosClient.get(url);\r\n  },\r\n};\r\nexport default globalAPI;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Select, Row, Col, Card, message } from \"antd\";\r\nimport globalAPI from \"../../apis/globalApi\";\r\nimport logo from \"../../statics/images/logo_so.png\";\r\n\r\nconst { Option, OptGroup } = Select;\r\n\r\nconst Login = () => {\r\n  const [form] = Form.useForm();\r\n  const [schools, setSchools] = useState([]);\r\n  const [pgds, setpgds] = useState([]);\r\n\r\n  const getSchools = async () => {\r\n    await globalAPI.getDonVi().then((res) => setSchools(res.Result));\r\n  };\r\n  const getPGDs = async () => {\r\n    await globalAPI.getPhongGiaoDuc().then((res) => setpgds(res.Result));\r\n  };\r\n  useEffect(() => {\r\n    getSchools();\r\n    getPGDs();\r\n  }, []);\r\n  const handleSSO = () => {\r\n    form.validateFields().then(async () => {\r\n      const schoolID = form.getFieldValue(\"schoolID\");\r\n      const data = {\r\n        SysUserName: \"QUANLY\",\r\n        SysPassword: \"asdf1324!$@\",\r\n        Param1: schoolID,\r\n        Param2: \"param2\",\r\n        Param3: \"param3\",\r\n        Returnuri:\r\n          process.env.NODE_ENV === \"development\"\r\n            ? \"http://localhost:3000/loginsso\"\r\n            : \"https://thongnguyen28101994.github.io/dynamic_form/loginsso\",\r\n        isHocSinh: \"false\",\r\n      };\r\n      await globalAPI.loginsso(data).then((res) => {\r\n        if (res.StatusCode === 200) {\r\n          window.location.href = res.Result;\r\n        } else {\r\n          message.error(\"Có lỗi xảy ra!\");\r\n        }\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Row style={{ backgroundColor: \"#9d9d9d\", height: \"100vh\" }}>\r\n        <Col\r\n          xs={{ span: 24 }}\r\n          lg={{ span: 8, offset: 8 }}\r\n          style={{ paddingTop: 200 }}\r\n        >\r\n          <Card bordered={false}>\r\n            <span\r\n              style={{\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n                display: \"block\",\r\n                paddingBottom: 10,\r\n              }}\r\n            >\r\n              <img src={logo} alt=\"logoso\"></img>\r\n            </span>\r\n            <Form name=\"control-hooks\" onFinish={handleSSO} form={form}>\r\n              <Form.Item\r\n                name=\"schoolID\"\r\n                label=\"Trường\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Vui lòng chọn trường!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  placeholder=\"Vui lòng chọn trường\"\r\n                  onChange={(e) => form.setFieldsValue(console.log(e))}\r\n                  allowClear\r\n                  showSearch\r\n                  optionFilterProp=\"children\"\r\n                >\r\n                  {pgds.map((pgd) => (\r\n                    <OptGroup label={pgd.TenPGD} key={pgd.PGDID}>\r\n                      {schools\r\n                        .filter((s) => s.PGDID === pgd.PGDID)\r\n                        .map((s) => (\r\n                          <Option key={s.SchoolID} value={s.SchoolID}>\r\n                            {s.TenTruong}\r\n                          </Option>\r\n                        ))}\r\n                    </OptGroup>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n              <p style={{ textAlign: \"center\" }}>\r\n                <Button htmlType=\"submit\" type=\"primary\">\r\n                  TIẾP TỤC\r\n                </Button>\r\n              </p>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport globalAPI from \"../apis/globalApi\";\r\nconst Direction = () => {\r\n  let location = useLocation();\r\n  let history = useHistory();\r\n  sessionStorage.setItem(\r\n    \"token\",\r\n    decodeURIComponent(location.search.substring(7))\r\n  );\r\n\r\n  useEffect(() => {\r\n    globalAPI.getSession().then(async (res) => {\r\n      if (res.StatusCode === 200) {\r\n        sessionStorage.setItem(\"session\", JSON.stringify(res.Result[0]));\r\n        console.log(res);\r\n        if (res.Result[0].AccountType === \"Trg\") {\r\n          history.push(\"/truong\");\r\n        }\r\n      }\r\n    });\r\n  }, [history]);\r\n  return <></>;\r\n};\r\n\r\nexport default Direction;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  PageHeader,\r\n  Button,\r\n  message,\r\n  Select,\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  Row,\r\n  Col,\r\n  Space,\r\n  Checkbox,\r\n  DatePicker,\r\n  Upload,\r\n} from \"antd\";\r\nimport {\r\n  PlusSquareOutlined,\r\n  MinusCircleOutlined,\r\n  PlusOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nconst FormRender = (props) => {\r\n  const { Option } = Select;\r\n  const [fileList, setFileList] = useState([]);\r\n  const changeFileList = (data) => {\r\n    setFileList(data);\r\n  };\r\n  function beforeUpload(file) {\r\n    const isPDF =\r\n      file.type === \"application/pdf\" ||\r\n      file.type ===\r\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ||\r\n      file.type === \"application/msword\";\r\n    //console.log(isPDF);\r\n    if (!isPDF) {\r\n      message.error(\"You can only upload PDF or Word file!\");\r\n      return false;\r\n    }\r\n  }\r\n  // useEffect(() => {\r\n  //   let data =\r\n  //     props.formValue.getFieldsValue().users[props.fieldKey][props.columnID];\r\n  //   changeFileList(data);\r\n  // }, []);\r\n  // const uploadProps = {\r\n  //   name: \"file\",\r\n  //   action:\r\n  //     \"https://apigateway.hcm.edu.vn/WAPINetCore/DynamicForm/UploadFile/\" +\r\n  //     props.formValue.getFieldsValue().users[props.fieldKey].RowID +\r\n  //     \"/\" +\r\n  //     props.columnID,\r\n  //   headers: {\r\n  //     token: sessionStorage.getItem(\"token\"),\r\n  //   },\r\n  //   onChange(info) {\r\n  //     let fileList = [...info.fileList];\r\n  //     fileList = fileList.slice(-1);\r\n  //     fileList = fileList.map((file) => {\r\n  //       if (file.response) {\r\n  //         // Component will show file.url as link\r\n  //         file.url = file.response.url;\r\n  //       }\r\n  //       return file;\r\n  //     });\r\n  //     changeFileList(fileList);\r\n  //     if (info.file.status !== \"uploading\") {\r\n  //       // console.log(info.file, info.fileList);\r\n  //     }\r\n  //     if (info.file.status === \"done\") {\r\n  //       message.success(`${info.file.name} file uploaded successfully`);\r\n  //     } else if (info.file.status === \"error\") {\r\n  //       message.error(`${info.file.name} file upload failed.`);\r\n  //     }\r\n  //   },\r\n  // };\r\n\r\n  switch (props.inputType) {\r\n    case \"select\":\r\n      let selectkey = JSON.parse(props.inputValue);\r\n      return (\r\n        <Select showSearch placeholder={`${props.columnName}`}>\r\n          {selectkey.map((value) => (\r\n            <Option key={value} value={value}>\r\n              {value}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      );\r\n    case \"checkbox\":\r\n      return <Checkbox></Checkbox>;\r\n    case \"date\":\r\n      return <DatePicker format=\"DD/MM/YYYY\" />;\r\n    // case \"tel\":\r\n    //   return <Input.Tel placeholder={props.columnName} />;\r\n    case \"number\":\r\n      return (\r\n        <Input\r\n          placeholder={props.columnName}\r\n          onChange={(e) =>\r\n            onHandleChangeNumeric(\r\n              e,\r\n              props.formValue,\r\n              props.fieldKey,\r\n              props.columnID\r\n            )\r\n          }\r\n        />\r\n      );\r\n    // case \"file\":\r\n    //   return (\r\n    //     <Upload\r\n    //       {...uploadProps}\r\n    //       fileList={fileList}\r\n    //       maxCount={1}\r\n    //       beforeUpload={beforeUpload}\r\n    //     >\r\n    //       <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n    //     </Upload>\r\n    //   );\r\n    case \"tel\":\r\n      return (\r\n        <Input\r\n          placeholder={props.columnName}\r\n          onChange={(e) =>\r\n            onHandleChangeNumeric(\r\n              e,\r\n              props.formValue,\r\n              props.fieldKey,\r\n              props.columnID\r\n            )\r\n          }\r\n        />\r\n      );\r\n    default:\r\n      return <Input placeholder={props.columnName} />;\r\n  }\r\n};\r\nconst onHandleChangeNumeric = (e, formValue, fieldKey, columnID) => {\r\n  let valu = Number.parseInt(e.target.value);\r\n  let formVal = formValue.getFieldsValue();\r\n  if (!Number(valu) && valu.length > 0) {\r\n    message.warning(\"Chỉ nhập số trong cột này\");\r\n    formVal.users[fieldKey][columnID] = \"\";\r\n    formValue.setFieldsValue(formVal);\r\n  }\r\n};\r\nconst FormCustom = React.memo(({ ...restProps }) => {\r\n  return (\r\n    <>\r\n      <Form.Item\r\n        label={restProps.columnName}\r\n        key={restProps.columnID}\r\n        name={[restProps.name, restProps.columnID + \"\"]}\r\n        valuePropName={restProps.inputType === \"checkbox\" ? \"checked\" : \"value\"}\r\n        // fieldKey={[restProps.fieldKey, restProps.columnID]}\r\n        rules={[\r\n          {\r\n            required: !restProps.allowNull,\r\n            message: `Missing ${restProps.columnName}`,\r\n          },\r\n        ]}\r\n      >\r\n        {FormRender(restProps)}\r\n      </Form.Item>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default FormCustom;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  PageHeader,\r\n  Button,\r\n  message,\r\n  Form,\r\n  Input,\r\n  Spin,\r\n  Select,\r\n  Table,\r\n  Tooltip,\r\n  Pagination,\r\n} from \"antd\";\r\nimport {\r\n  MinusCircleOutlined,\r\n  PlusOutlined,\r\n  SearchOutlined,\r\n} from \"@ant-design/icons\";\r\nimport FormCustom from \"./formbaocao\";\r\nexport default function DefaultForm() {\r\n  const [form] = Form.useForm();\r\n  const { Column } = Form;\r\n\r\n  //state\r\n  const [columns, setColumns] = useState([]);\r\n\r\n  //effect\r\n  useEffect(() => {\r\n    getFormColumn();\r\n  }, []);\r\n  //DuLieuGia\r\n  const getFormColumn = () => {\r\n    const columns = [\r\n      {\r\n        columnID: 1,\r\n        columnName: \"Test1\",\r\n        name: \"test1\",\r\n      },\r\n      {\r\n        columnID: 2,\r\n        columnName: \"Test2\",\r\n        name: \"test2\",\r\n      },\r\n      {\r\n        columnID: 3,\r\n        columnName: \"Test3\",\r\n        name: \"test3\",\r\n      },\r\n      {\r\n        columnID: 4,\r\n        columnName: \"Test4\",\r\n        name: \"test4\",\r\n      },\r\n      {\r\n        columnID: 5,\r\n        columnName: \"Test5\",\r\n        name: \"test5\",\r\n      },\r\n    ];\r\n    setColumns(columns);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Default Form</h1>\r\n      <PageHeader\r\n        className=\"site-page-header-responsive\"\r\n        title=\"Form Báo Cáo Dạng Cơ Bản\"\r\n      >\r\n        <Form\r\n          name=\"dynamic_form_nest_item\"\r\n          //onFinish={onFinish}\r\n          autoComplete=\"off\"\r\n          form={form}\r\n        >\r\n          {columns.map(({ columnID, columnName, ...restProps }) => (\r\n            <>\r\n              <FormCustom\r\n                // name={index}\r\n                formValue={form}\r\n                //fieldKey={index}\r\n                columnID={columnID}\r\n                columnName={columnName}\r\n                {...restProps}\r\n              />\r\n            </>\r\n          ))}\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{ marginRight: \"5%\" }}\r\n              onClick={() => {\r\n                //   SetSelectedRowEdit({\r\n                //     RowID: valueCol[index].RowID,\r\n                //   });\r\n                message.success(\"Đã Lưu\");\r\n              }}\r\n            >\r\n              <MinusCircleOutlined /> Lưu\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </PageHeader>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  PageHeader,\r\n  Button,\r\n  message,\r\n  Select,\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  Row,\r\n  Col,\r\n  Space,\r\n  Checkbox,\r\n  DatePicker,\r\n  Upload,\r\n} from \"antd\";\r\nimport {\r\n  PlusSquareOutlined,\r\n  MinusCircleOutlined,\r\n  PlusOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nconst FormRender = (props) => {\r\n  const { Option } = Select;\r\n  const [fileList, setFileList] = useState([]);\r\n  const changeFileList = (data) => {\r\n    setFileList(data);\r\n  };\r\n  function beforeUpload(file) {\r\n    const isPDF =\r\n      file.type === \"application/pdf\" ||\r\n      file.type ===\r\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ||\r\n      file.type === \"application/msword\";\r\n    //console.log(isPDF);\r\n    if (!isPDF) {\r\n      message.error(\"You can only upload PDF or Word file!\");\r\n      return false;\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    let data =\r\n      props.formValue.getFieldsValue().users[props.fieldKey][props.columnID];\r\n    changeFileList(data);\r\n  }, []);\r\n  const uploadProps = {\r\n    name: \"file\",\r\n    action:\r\n      \"https://apigateway.hcm.edu.vn/WAPINetCore/DynamicForm/UploadFile/\" +\r\n      props.formValue.getFieldsValue().users[props.fieldKey].RowID +\r\n      \"/\" +\r\n      props.columnID,\r\n    headers: {\r\n      token: sessionStorage.getItem(\"token\"),\r\n    },\r\n    onChange(info) {\r\n      let fileList = [...info.fileList];\r\n      fileList = fileList.slice(-1);\r\n      fileList = fileList.map((file) => {\r\n        if (file.response) {\r\n          // Component will show file.url as link\r\n          file.url = file.response.url;\r\n        }\r\n        return file;\r\n      });\r\n      changeFileList(fileList);\r\n      if (info.file.status !== \"uploading\") {\r\n        // console.log(info.file, info.fileList);\r\n      }\r\n      if (info.file.status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded successfully`);\r\n      } else if (info.file.status === \"error\") {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n  };\r\n\r\n  switch (props.inputType) {\r\n    case \"select\":\r\n      let selectkey = JSON.parse(props.inputValue);\r\n      return (\r\n        <Select showSearch placeholder={`${props.columnName}`}>\r\n          {selectkey.map((value) => (\r\n            <Option key={value} value={value}>\r\n              {value}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      );\r\n    case \"checkbox\":\r\n      return <Checkbox></Checkbox>;\r\n    case \"date\":\r\n      return <DatePicker format=\"DD/MM/YYYY\" />;\r\n    // case \"tel\":\r\n    //   return <Input.Tel placeholder={props.columnName} />;\r\n    case \"number\":\r\n      return (\r\n        <Input\r\n          placeholder={props.columnName}\r\n          onChange={(e) =>\r\n            onHandleChangeNumeric(\r\n              e,\r\n              props.formValue,\r\n              props.fieldKey,\r\n              props.columnID\r\n            )\r\n          }\r\n        />\r\n      );\r\n    case \"file\":\r\n      return (\r\n        <Upload\r\n          {...uploadProps}\r\n          fileList={fileList}\r\n          maxCount={1}\r\n          beforeUpload={beforeUpload}\r\n        >\r\n          <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n        </Upload>\r\n      );\r\n    case \"tel\":\r\n      return (\r\n        <Input\r\n          placeholder={props.columnName}\r\n          onChange={(e) =>\r\n            onHandleChangeNumeric(\r\n              e,\r\n              props.formValue,\r\n              props.fieldKey,\r\n              props.columnID\r\n            )\r\n          }\r\n        />\r\n      );\r\n    default:\r\n      return <Input placeholder={props.columnName} />;\r\n  }\r\n};\r\nconst onHandleChangeNumeric = (e, formValue, fieldKey, columnID) => {\r\n  let valu = Number.parseInt(e.target.value);\r\n  let formVal = formValue.getFieldsValue();\r\n  if (!Number(valu) && valu.length > 0) {\r\n    message.warning(\"Chỉ nhập số trong cột này\");\r\n    formVal.users[fieldKey][columnID] = \"\";\r\n    formValue.setFieldsValue(formVal);\r\n  }\r\n};\r\nconst FormCustom = React.memo(({ ...restProps }) => {\r\n  return (\r\n    <>\r\n      <Form.Item\r\n        key={restProps.columnID + restProps.fieldKey}\r\n        name={[restProps.name, restProps.columnID + \"\"]}\r\n        valuePropName={restProps.inputType === \"checkbox\" ? \"checked\" : \"value\"}\r\n        fieldKey={[restProps.fieldKey, restProps.columnID]}\r\n        rules={[\r\n          {\r\n            required: !restProps.allowNull,\r\n            message: `Missing ${restProps.columnName}`,\r\n          },\r\n        ]}\r\n      >\r\n        {FormRender(restProps)}\r\n      </Form.Item>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default FormCustom;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FormCustom from \"./formbaocao\";\r\nimport {\r\n  PageHeader,\r\n  Button,\r\n  message,\r\n  Form,\r\n  Input,\r\n  Spin,\r\n  Select,\r\n  Table,\r\n  Tooltip,\r\n  Pagination,\r\n} from \"antd\";\r\nimport {\r\n  MinusCircleOutlined,\r\n  PlusOutlined,\r\n  SearchOutlined,\r\n} from \"@ant-design/icons\";\r\nexport default function InlineForm() {\r\n  const [form] = Form.useForm();\r\n  const { Column } = Form;\r\n  //state\r\n  const [columns, setColumns] = useState([]);\r\n\r\n  //function\r\n  const getFormValue = async () => {};\r\n  const addNewRow = async (addEmptyRow, add) => {\r\n    add();\r\n  };\r\n  const addEmptyRow = async () => {};\r\n  const deleteNewRow = async () => {};\r\n\r\n  const onFinish = async () => {};\r\n\r\n  //effect\r\n  useEffect(() => {\r\n    getFormColumn();\r\n  }, []);\r\n  //DuLieuGia\r\n  const getFormColumn = () => {\r\n    const columns = [\r\n      {\r\n        columnID: 1,\r\n        columnName: \"Test1\",\r\n      },\r\n      {\r\n        columnID: 2,\r\n        columnName: \"Test2\",\r\n      },\r\n      {\r\n        columnID: 3,\r\n        columnName: \"Test3\",\r\n      },\r\n      {\r\n        columnID: 4,\r\n        columnName: \"Test4\",\r\n      },\r\n      {\r\n        columnID: 5,\r\n        columnName: \"Test5\",\r\n      },\r\n    ];\r\n    setColumns(columns);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        className=\"site-page-header-responsive\"\r\n        title=\"Form Báo Cáo Dạng Bảng\"\r\n      >\r\n        {columns.length > 0 ? (\r\n          <>\r\n            <Form\r\n              name=\"dynamic_form_nest_item\"\r\n              onFinish={onFinish}\r\n              autoComplete=\"off\"\r\n              form={form}\r\n            >\r\n              <Form.List name=\"users\">\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    <Table\r\n                      dataSource={fields}\r\n                      pagination={false}\r\n                      bordered\r\n                      scroll={{ x: 1500, y: 650 }}\r\n                      title={() => {\r\n                        return (\r\n                          <>\r\n                            <Form.Item>\r\n                              <Button\r\n                                type=\"dashed\"\r\n                                // disabled={isDisableAddField}\r\n                                onClick={() => {\r\n                                  addNewRow(addEmptyRow, add);\r\n                                  //   if (isChooseMulti)\r\n                                  //     addNewRow(selectedHS, addEmptyRow, add);\r\n                                  //   else addMultiRow();\r\n                                }}\r\n                                block\r\n                                icon={<PlusOutlined />}\r\n                              >\r\n                                Thêm Dòng\r\n                              </Button>\r\n                            </Form.Item>\r\n                          </>\r\n                        );\r\n                      }}\r\n                    >\r\n                      {columns.map(({ columnID, columnName, ...restProps }) => (\r\n                        <>\r\n                          <Column\r\n                            dataIndex={columnID}\r\n                            title={\r\n                              <Tooltip title={restProps.colDescription}>\r\n                                {columnName}\r\n                              </Tooltip>\r\n                            }\r\n                            width={restProps.width}\r\n                            // align={\"center\"}\r\n                            render={(value, row, index) => {\r\n                              return (\r\n                                <FormCustom\r\n                                  name={index}\r\n                                  formValue={form}\r\n                                  fieldKey={index}\r\n                                  columnID={columnID}\r\n                                  columnName={columnName}\r\n                                  {...restProps}\r\n                                />\r\n                              );\r\n                            }}\r\n                          ></Column>\r\n                        </>\r\n                      ))}\r\n                      <Column\r\n                        dataIndex={\"ThaoTac\"}\r\n                        title={\"Thao Tác\"}\r\n                        fixed=\"right\"\r\n                        width={200}\r\n                        render={(value, row, index) => {\r\n                          return (\r\n                            <>\r\n                              <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{ marginRight: \"5%\" }}\r\n                                onClick={() => {\r\n                                  //   SetSelectedRowEdit({\r\n                                  //     RowID: valueCol[index].RowID,\r\n                                  //   });\r\n                                }}\r\n                              >\r\n                                <MinusCircleOutlined /> Lưu\r\n                              </Button>\r\n                              <Button\r\n                                danger\r\n                                onClick={() => {\r\n                                  let columnFiles = columns.filter(\r\n                                    (x) => x.inputType === \"file\"\r\n                                  );\r\n                                  if (columnFiles.length > 0) {\r\n                                    columnFiles.forEach((item) => {\r\n                                      //   deleteFile(\r\n                                      //     valueCol[index].RowID,\r\n                                      //     item.columnID\r\n                                      //   );\r\n                                    });\r\n                                  }\r\n                                  deleteNewRow();\r\n                                  // valueCol[index].RowID,\r\n                                  // index,\r\n                                  // remove\r\n                                }}\r\n                              >\r\n                                <MinusCircleOutlined /> Xóa\r\n                              </Button>\r\n                            </>\r\n                          );\r\n                        }}\r\n                      />\r\n                    </Table>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form>\r\n          </>\r\n        ) : null}\r\n      </PageHeader>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport DefaultForm from \"./DefaultForm\";\r\nimport InlineForm from \"./InlineForm\";\r\nexport default function DynamicFormV2({ id }) {\r\n  return <>{id === 2 ? <DefaultForm /> : <InlineForm />}</>;\r\n}\r\n","import React from \"react\";\r\nimport DynamicFormV2 from \"../dynamicForm_V2\";\r\nexport default function Test() {\r\n  return (\r\n    <>\r\n      <h1>DynamicForm</h1>\r\n      <DynamicFormV2 id={1} />\r\n      <DynamicFormV2 id={2} />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"../pages/login\";\r\nimport Direction from \"./direction\";\r\nimport Test from \"../pages/test\";\r\nconst hist = createBrowserHistory();\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router history={hist}>\r\n      <Switch>\r\n        <Route exact path=\"/dynamic_form/\">\r\n          <Login></Login>\r\n        </Route>\r\n        <Route exact path=\"/loginsso/\">\r\n          <Direction />\r\n        </Route>\r\n        <Route path=\"/truong\">\r\n          <Test />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./statics/css/style.css\";\r\nimport App from \"./routers/index\";\r\nimport \"react-datasheet/lib/react-datasheet.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}